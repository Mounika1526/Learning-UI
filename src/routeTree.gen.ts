/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as YodhaPharmacyRouteImport } from './routes/yodhaPharmacy'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HomeRouteImport } from './routes/home'
import { Route as CrazyorbitRouteImport } from './routes/crazyorbit'
import { Route as CareersRouteImport } from './routes/careers'
import { Route as IndexRouteImport } from './routes/index'

const YodhaPharmacyRoute = YodhaPharmacyRouteImport.update({
  id: '/yodhaPharmacy',
  path: '/yodhaPharmacy',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const CrazyorbitRoute = CrazyorbitRouteImport.update({
  id: '/crazyorbit',
  path: '/crazyorbit',
  getParentRoute: () => rootRouteImport,
} as any)
const CareersRoute = CareersRouteImport.update({
  id: '/careers',
  path: '/careers',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/careers': typeof CareersRoute
  '/crazyorbit': typeof CrazyorbitRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/projects': typeof ProjectsRoute
  '/yodhaPharmacy': typeof YodhaPharmacyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/careers': typeof CareersRoute
  '/crazyorbit': typeof CrazyorbitRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/projects': typeof ProjectsRoute
  '/yodhaPharmacy': typeof YodhaPharmacyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/careers': typeof CareersRoute
  '/crazyorbit': typeof CrazyorbitRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/projects': typeof ProjectsRoute
  '/yodhaPharmacy': typeof YodhaPharmacyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/careers'
    | '/crazyorbit'
    | '/home'
    | '/login'
    | '/projects'
    | '/yodhaPharmacy'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/careers'
    | '/crazyorbit'
    | '/home'
    | '/login'
    | '/projects'
    | '/yodhaPharmacy'
  id:
    | '__root__'
    | '/'
    | '/careers'
    | '/crazyorbit'
    | '/home'
    | '/login'
    | '/projects'
    | '/yodhaPharmacy'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CareersRoute: typeof CareersRoute
  CrazyorbitRoute: typeof CrazyorbitRoute
  HomeRoute: typeof HomeRoute
  LoginRoute: typeof LoginRoute
  ProjectsRoute: typeof ProjectsRoute
  YodhaPharmacyRoute: typeof YodhaPharmacyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/yodhaPharmacy': {
      id: '/yodhaPharmacy'
      path: '/yodhaPharmacy'
      fullPath: '/yodhaPharmacy'
      preLoaderRoute: typeof YodhaPharmacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crazyorbit': {
      id: '/crazyorbit'
      path: '/crazyorbit'
      fullPath: '/crazyorbit'
      preLoaderRoute: typeof CrazyorbitRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/careers': {
      id: '/careers'
      path: '/careers'
      fullPath: '/careers'
      preLoaderRoute: typeof CareersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CareersRoute: CareersRoute,
  CrazyorbitRoute: CrazyorbitRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  ProjectsRoute: ProjectsRoute,
  YodhaPharmacyRoute: YodhaPharmacyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
